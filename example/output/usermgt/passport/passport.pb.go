// Code generated by protoc-gen-go. DO NOT EDIT.
// source: usermgt/passport/passport.proto

package idl_usermgt_passport_api_v1

import (
	userbase "code.266.com/usermgt/output/usermgt/userbase"
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HelloReq struct {
	Msg                  string             `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Info                 *userbase.UserInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *HelloReq) Reset()         { *m = HelloReq{} }
func (m *HelloReq) String() string { return proto.CompactTextString(m) }
func (*HelloReq) ProtoMessage()    {}
func (*HelloReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c6b1dee8ab7d8e21, []int{0}
}

func (m *HelloReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloReq.Unmarshal(m, b)
}
func (m *HelloReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloReq.Marshal(b, m, deterministic)
}
func (m *HelloReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloReq.Merge(m, src)
}
func (m *HelloReq) XXX_Size() int {
	return xxx_messageInfo_HelloReq.Size(m)
}
func (m *HelloReq) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloReq.DiscardUnknown(m)
}

var xxx_messageInfo_HelloReq proto.InternalMessageInfo

func (m *HelloReq) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *HelloReq) GetInfo() *userbase.UserInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type HelloRsp struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloRsp) Reset()         { *m = HelloRsp{} }
func (m *HelloRsp) String() string { return proto.CompactTextString(m) }
func (*HelloRsp) ProtoMessage()    {}
func (*HelloRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_c6b1dee8ab7d8e21, []int{1}
}

func (m *HelloRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloRsp.Unmarshal(m, b)
}
func (m *HelloRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloRsp.Marshal(b, m, deterministic)
}
func (m *HelloRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloRsp.Merge(m, src)
}
func (m *HelloRsp) XXX_Size() int {
	return xxx_messageInfo_HelloRsp.Size(m)
}
func (m *HelloRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloRsp.DiscardUnknown(m)
}

var xxx_messageInfo_HelloRsp proto.InternalMessageInfo

func (m *HelloRsp) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func init() {
	proto.RegisterType((*HelloReq)(nil), "idl.usermgt.passport.api.v1.HelloReq")
	proto.RegisterType((*HelloRsp)(nil), "idl.usermgt.passport.api.v1.HelloRsp")
}

func init() { proto.RegisterFile("usermgt/passport/passport.proto", fileDescriptor_c6b1dee8ab7d8e21) }

var fileDescriptor_c6b1dee8ab7d8e21 = []byte{
	// 197 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2f, 0x2d, 0x4e, 0x2d,
	0xca, 0x4d, 0x2f, 0xd1, 0x2f, 0x48, 0x2c, 0x2e, 0x2e, 0xc8, 0x2f, 0x42, 0x30, 0xf4, 0x0a, 0x8a,
	0xf2, 0x4b, 0xf2, 0x85, 0xa4, 0x33, 0x53, 0x72, 0xf4, 0xa0, 0x8a, 0xf4, 0xe0, 0x72, 0x89, 0x05,
	0x99, 0x7a, 0x65, 0x86, 0x52, 0x42, 0x30, 0xdd, 0x20, 0x1a, 0xa2, 0x41, 0xc9, 0x85, 0x8b, 0xc3,
	0x23, 0x35, 0x27, 0x27, 0x3f, 0x28, 0xb5, 0x50, 0x48, 0x80, 0x8b, 0x39, 0xb7, 0x38, 0x5d, 0x82,
	0x51, 0x81, 0x51, 0x83, 0x33, 0x08, 0xc4, 0x14, 0x52, 0xe3, 0x62, 0xc9, 0xcc, 0x4b, 0xcb, 0x97,
	0x60, 0x52, 0x60, 0xd4, 0xe0, 0x36, 0x12, 0x02, 0x9b, 0x9c, 0x94, 0x58, 0x9c, 0xaa, 0x17, 0x5a,
	0x9c, 0x5a, 0xe4, 0x99, 0x97, 0x96, 0x1f, 0x04, 0x96, 0x57, 0x92, 0x83, 0x99, 0x52, 0x5c, 0x20,
	0x24, 0xc4, 0xc5, 0x92, 0x9c, 0x9f, 0x92, 0x0a, 0x36, 0x86, 0x35, 0x08, 0xcc, 0x36, 0xca, 0xe2,
	0xe2, 0x07, 0xe9, 0x00, 0xa9, 0x0d, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x15, 0x0a, 0xe7, 0x62,
	0x05, 0x6b, 0x11, 0x52, 0xd5, 0xc3, 0xe3, 0x66, 0x3d, 0x98, 0xe3, 0xa4, 0x88, 0x51, 0x56, 0x5c,
	0xa0, 0xc4, 0x90, 0xc4, 0x06, 0xf6, 0x98, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xcc, 0xa1, 0xc9,
	0x6c, 0x2c, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserinfoServiceClient is the client API for UserinfoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserinfoServiceClient interface {
	Hello(ctx context.Context, in *HelloReq, opts ...grpc.CallOption) (*HelloRsp, error)
}

type userinfoServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserinfoServiceClient(cc *grpc.ClientConn) UserinfoServiceClient {
	return &userinfoServiceClient{cc}
}

func (c *userinfoServiceClient) Hello(ctx context.Context, in *HelloReq, opts ...grpc.CallOption) (*HelloRsp, error) {
	out := new(HelloRsp)
	err := c.cc.Invoke(ctx, "/idl.usermgt.passport.api.v1.UserinfoService/Hello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserinfoServiceServer is the server API for UserinfoService service.
type UserinfoServiceServer interface {
	Hello(context.Context, *HelloReq) (*HelloRsp, error)
}

// UnimplementedUserinfoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserinfoServiceServer struct {
}

func (*UnimplementedUserinfoServiceServer) Hello(ctx context.Context, req *HelloReq) (*HelloRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hello not implemented")
}

func RegisterUserinfoServiceServer(s *grpc.Server, srv UserinfoServiceServer) {
	s.RegisterService(&_UserinfoService_serviceDesc, srv)
}

func _UserinfoService_Hello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserinfoServiceServer).Hello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/idl.usermgt.passport.api.v1.UserinfoService/Hello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserinfoServiceServer).Hello(ctx, req.(*HelloReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserinfoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "idl.usermgt.passport.api.v1.UserinfoService",
	HandlerType: (*UserinfoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Hello",
			Handler:    _UserinfoService_Hello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "usermgt/passport/passport.proto",
}
